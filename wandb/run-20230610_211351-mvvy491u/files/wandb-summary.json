{"num_epochs": "20", "_timestamp": 1686431632.3254797, "_runtime": 1.2634057998657227, "_step": 33, "criterion": "CrossEntropyLoss()", "device": "cpu", "batch_size": "8", "log_dir": "./logs/source_target", "dataset_choice": "Giacomo", "subset_flag": "True", "obs_num": "20", "num_classes_to_remove": "6", "g_open_set": "False", "hard_reset": "False", "class_validation": "False", "hmdb_test_source": "/content/openset_domain_adaptation/paths/hmdb_test_source.txt", "hmdb_test_target": "/content/openset_domain_adaptation/paths/hmdb_test_target.txt", "hmdb_train_source": "/content/openset_domain_adaptation/paths/hmdb_train_source.txt", "hmdb_train_target": "/content/openset_domain_adaptation/paths/hmdb_train_target.txt", "ucf_test_source": "/content/openset_domain_adaptation/paths/ucf_test_source.txt", "ucf_test_target": "/content/openset_domain_adaptation/paths/ucf_test_target.txt", "ucf_train_source": "/content/openset_domain_adaptation/paths/ucf_train_source.txt", "ucf_train_target": "/content/openset_domain_adaptation/paths/ucf_train_target.txt", "source_train_txt": "/content/openset_domain_adaptation/paths/ucf_train_source.txt", "source_test_txt": "/content/openset_domain_adaptation/paths/ucf_test_source.txt", "target_train_txt": "/content/openset_domain_adaptation/paths/hmdb_train_target.txt", "target_test_txt": "/content/openset_domain_adaptation/paths/hmdb_test_target.txt", "path_source_train": "/content/openset_domain_adaptation/hmdb_ucf/ucf/train", "path_source_test": "/content/openset_domain_adaptation/hmdb_ucf/ucf/test", "path_target_train": "/content/openset_domain_adaptation/hmdb_ucf/hmdb/train", "path_target_test": "/content/openset_domain_adaptation/hmdb_ucf/hmdb/test", "source_train_classes": "{'golf': '2', 'pullup': '4', 'fencing': '1', 'climb': '0', 'punch': '5', 'kick_ball': '3'}", "target_train_classes": "{'shoot_bow': '6', 'golf': '2', 'shoot_ball': '6', 'pullup': '4', 'fencing': '1', 'climb': '0', 'ride_bike': '6', 'punch': '5', 'pushup': '6', 'ride_horse': '6', 'kick_ball': '3', 'walk': '6'}", "target_val_classes": "{'shoot_bow': '6', 'golf': '2', 'shoot_ball': '6', 'pullup': '4', 'fencing': '1', 'climb': '0', 'ride_bike': '6', 'punch': '5', 'pushup': '6', 'ride_horse': '6', 'kick_ball': '3', 'walk': '6'}", "num_classes": "7", "model": "CEVTModel(\n  (feature_extractor): Sequential(\n    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU(inplace=True)\n    (3): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n    (4): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (5): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample): Sequential(\n          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)\n          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (6): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample): Sequential(\n          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)\n          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (7): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample): Sequential(\n          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (8): AdaptiveAvgPool2d(output_size=(1, 1))\n  )\n  (classifier): Linear(in_features=512, out_features=7, bias=True)\n)", "optimizer": "SGD (\nParameter Group 0\n    dampening: 0\n    differentiable: False\n    foreach: None\n    lr: 0.001\n    maximize: False\n    momentum: 0.9\n    nesterov: False\n    weight_decay: 0\n)", "_wandb": {"runtime": 25}}