wandb_version: 1

_wandb:
  desc: null
  value:
    python_version: 3.10.12
    cli_version: 0.16.0
    framework: huggingface
    huggingface_version: 4.35.2
    is_jupyter_run: true
    is_kaggle_kernel: false
    start_time: 1701615470.393876
    t:
      1:
      - 1
      - 2
      - 3
      - 5
      - 11
      - 12
      - 41
      - 49
      - 53
      - 55
      2:
      - 1
      - 2
      - 3
      - 5
      - 11
      - 12
      - 41
      - 49
      - 53
      - 55
      3:
      - 1
      - 2
      - 15
      - 17
      - 19
      - 23
      - 37
      4: 3.10.12
      5: 0.16.0
      6: 4.35.2
      8:
      - 1
      - 5
      - 12
      13: linux-x86_64
num_epochs:
  desc: null
  value: 15
device:
  desc: null
  value: cuda
batch_size:
  desc: null
  value: 8
dataset_choice:
  desc: null
  value: Giacomo
subset_flag:
  desc: null
  value: false
obs_num:
  desc: null
  value: 30
num_classes_to_remove:
  desc: null
  value: 2
g_open_set:
  desc: null
  value: false
hard_reset:
  desc: null
  value: false
class_validation:
  desc: null
  value: false
adaptation_direction:
  desc: null
  value: hmdb2ucf
baseline_or_proposed:
  desc: null
  value: proposed
criterion_label_classifier:
  desc: null
  value: CrossEntropyLoss()
criterion:
  desc: null
  value: CrossEntropyLoss()
log_dir:
  desc: null
  value: ./logs/source_target
seed:
  desc: null
  value: 42
reduction:
  desc: null
  value: 2
dropout:
  desc: null
  value: 0.5
n_layers:
  desc: null
  value: 3
source_train_txt:
  desc: null
  value: /content/openset_domain_adaptation/paths/hmdb_train.txt
source_test_txt:
  desc: null
  value: /content/openset_domain_adaptation/paths/hmdb_test.txt
target_train_txt:
  desc: null
  value: /content/openset_domain_adaptation/paths/ucf_train.txt
target_test_txt:
  desc: null
  value: /content/openset_domain_adaptation/paths/ucf_test.txt
path_source_train:
  desc: null
  value: /content/openset_domain_adaptation/hmdb_ucf/hmdb/train
path_source_test:
  desc: null
  value: /content/openset_domain_adaptation/hmdb_ucf/hmdb/test
path_target_train:
  desc: null
  value: /content/openset_domain_adaptation/hmdb_ucf/ucf/train
path_target_test:
  desc: null
  value: /content/openset_domain_adaptation/hmdb_ucf/ucf/test
model_dir:
  desc: null
  value: /content/drive/MyDrive/datasets-thesis/model
timestamp:
  desc: null
  value: '20231129_081927'
result_path:
  desc: null
  value: /content/drive/MyDrive/datasets-thesis/runs/frame_analysis_comparison/20231129_081927
n_frames:
  desc: null
  value: 1
strategy:
  desc: null
  value: random
train_classes:
  desc: null
  value:
    golf: '2'
    shoot_ball: '9'
    ride_bike: '7'
    walk: '11'
    kick_ball: '3'
    climb: '0'
    shoot_bow: '10'
    pushup: '6'
    punch: '5'
    fencing: '1'
    ride_horse: '8'
    pullup: '4'
test_classes:
  desc: null
  value:
    golf: '2'
    shoot_ball: '9'
    ride_bike: '7'
    walk: '11'
    kick_ball: '3'
    climb: '0'
    shoot_bow: '10'
    pushup: '6'
    punch: '5'
    fencing: '1'
    ride_horse: '8'
    pullup: '4'
num_classes:
  desc: null
  value: 12
model:
  desc: null
  value: "CEVTModel(\n  (feature_extractor): Sequential(\n    (0): Conv2d(3, 64, kernel_size=(7,\
    \ 7), stride=(2, 2), padding=(3, 3), bias=False)\n    (1): BatchNorm2d(64, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU(inplace=True)\n\
    \    (3): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n\
    \    (4): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(64, 64,\
    \ kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1):\
    \ BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(64, 64, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(64,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n \
    \     (1): BasicBlock(\n        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
    \ 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n\
    \        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n      )\n    )\n    (5): Sequential(\n      (0):\
    \ BasicBlock(\n        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2,\
    \ 2), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(128, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n\
    \        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (downsample): Sequential(\n          (0):\
    \ Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)\n          (1):\
    \ BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        )\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(128, 128,\
    \ kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1):\
    \ BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(128, 128, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(128,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n \
    \   )\n    (6): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(128,\
    \ 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      \
    \  (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample):\
    \ Sequential(\n          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2,\
    \ 2), bias=False)\n          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n    \
    \    (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2):\
    \ Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      )\n    )\n    (7): Sequential(\n      (0): BasicBlock(\n        (conv1):\
    \ Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n\
    \        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(512, 512, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(512,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample):\
    \ Sequential(\n          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2,\
    \ 2), bias=False)\n          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n    \
    \    (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2):\
    \ Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      )\n    )\n    (8): AdaptiveAvgPool2d(output_size=(1, 1))\n  )\n  (classifier):\
    \ Linear(in_features=512, out_features=12, bias=True)\n)"
optimizer:
  desc: null
  value: "SGD (\nParameter Group 0\n    dampening: 0\n    differentiable: False\n\
    \    foreach: None\n    lr: 0.001\n    maximize: False\n    momentum: 0.9\n  \
    \  nesterov: False\n    weight_decay: 0\n)"
hmdb:
  desc: null
  value:
    random:
      '1':
        train:
          epoch_1: '0.40335051546391754'
          epoch_2: '0.7770618556701031'
          epoch_3: '0.8427835051546392'
          epoch_4: '0.875'
          epoch_5: '0.9213917525773195'
          epoch_6: '0.9278350515463918'
          epoch_7: '0.9407216494845361'
          epoch_8: '0.9407216494845361'
          epoch_9: '0.9574742268041238'
          epoch_10: '0.9716494845360825'
          epoch_11: '0.9561855670103093'
          epoch_12: '0.9690721649484536'
          epoch_13: '0.979381443298969'
          epoch_14: '0.9664948453608248'
          epoch_15: '0.9884020618556701'
        test:
          epoch_1: '0.6439169139465876'
          epoch_2: '0.7210682492581603'
          epoch_3: '0.7804154302670623'
          epoch_4: '0.7804154302670623'
          epoch_5: '0.7685459940652819'
          epoch_6: '0.7952522255192879'
          epoch_7: '0.7507418397626113'
          epoch_8: '0.8100890207715133'
          epoch_9: '0.8011869436201781'
          epoch_10: '0.7685459940652819'
          epoch_11: '0.7388724035608308'
          epoch_12: '0.744807121661721'
          epoch_13: '0.8011869436201781'
          epoch_14: '0.7596439169139466'
          epoch_15: '0.7626112759643917'
